require_port('py27')
require_tool('nacl-sdk')
require_tool('ncwrap')
ncwrap_set_path()

work_dir.add(port_dir.get('test.c'))
work_dir.add(port_dir.get('fake_fs.c'))

pydir = get_inst_dir('py27')
pyincdir = pydir.get('include')
pylibdir = pydir.get('lib')

to_wrap = 'access chdir chmod chown close dup dup2 endpwent execve fchdir fchmod fchown fcntl fork fstat ftruncate get_current_dir_name getcwd getegid geteuid getgid getppid getpwent getpwnam getpwnam_r getpwuid getpwuid_r getrusage gettimeofday getuid getwd ioctl kill lchown link llseek lseek lstat mkdir open pipe pselect pthread_cleanup_pop pthread_cleanup_push raise read readlink rmdir select setegid seteuid setgid setpwent settimeofday setuid stat symlink times truncate ttyname ttyname_r umask unlink utime utimes vfork wait waitpid write'.split(' ')


pycflags = [
    '-I'+pyincdir.path,
    '-I'+pylibdir.path,
    '-fno-strict-aliasing',
    '-g',
    '-DNDEBUG',
    '-fwrapv',
    '-L'+pylibdir.path,
    '-lpython2.7',
    '-lm',
    '-lnosys',
    '-Werror'
    ]  + ['-Wl,--wrap=' + name for name in to_wrap]
if run('nacl64-gcc-wrap', '-o', 'test', 'test.c', 'fake_fs.c', *pycflags, cwd=work_dir).success:
    info('running output')
    out = run(work_dir.get('test'), cwd=work_dir)
    info('output was\n{0}', out.stdout)
    info('stderr was\n{0}', out.stderr)
    info('code was {0}', out.exit_code)

